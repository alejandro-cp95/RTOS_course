[33mcea7ec4[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m)[m Creaci√≥n de proyecto: FreeRTOS Mutex Binary Semaphore. Muestra de forma simple c√≥mo se implementa la funci√≥n de exclusi√≥n mutua haciendo uso de un sem√°foro binario.
[33mb646cf4[m Creaci√≥n de proyecto: FreeRTOS Counting Semaphore. Se habilitan 5 sem√°foros dentro de una interrupci√≥n cuyo bit de interrupci√≥n se pone en pendiente cada 500ms a trav√©s de una tarea. Dichos sem√°foros permiten ejecutarse 5 veces consecutivas otra de las tareas.
[33ma4fd413[m Creaci√≥n de proyecto: FreeRTOS Binary Semaphore Task. Una tarea habilita a otra para que haga sus tareas, con lo cual se puede apreciar c√≥mo se pueden sincronizar las tareas con un sem√°foro
[33m33f50b7[m Creaci√≥n de proyecto: FreeRTOS queue processing. Se hace uso de queues para comunicar entre tareas los comandos ingresados por medio del monitor serial y para comunicar aquellos mensajes que deben ser impresos en pantalla
[33mc203084[m Creaci√≥n de proyecto: FreeRTOS Idle Hook Power Saving. Se activa el idle hook para mandar a modo sleep a la CPU
[33m349dc2d[m Creaci√≥n de proyecto: FreeRTOS vTaskDelay. Se puede observar c√≥mo el uso de esta funci√≥n en tareas largas hace que la periodicidad no sea la esperada, y en su lugar se prefiere el uso de vTaskDelayUntil
[33m28d4062[m Limpieza de los proyectos creados hasta el momento. Se eliminaron macros, variables y handlers inutilizados
[33m1d56071[m Creaci√≥n de proyecto: FreeRTOS tasks priority. Se tienen dos tareas de diferente prioridad y se intercambian la prioridad cuando se presiona el bot√≥n.
[33mce7b75e[m Creaci√≥n de proyecto: FreeRTOS tasks delete. Se tienen dos tareas de diferente prioridad. Primero se est√° constantemente ejecutando la de mayor prioridad en que se conmuta la salida del LED cada segundo. Si se presiona el bot√≥n (pulso largo) se elimina la tarea, por lo que da lugar a ejecutarse la otra tarea, con una conmutaci√≥n cada 200 ms.
[33m40fa5e6[m Creaci√≥n de proyecto: FreeRTOS Tasks notify. Cuando el bot√≥n est√° presionado, en la tarea del bot√≥n se notifica a la tarea del LED para que en su tarea correspondiente el LED conmute. Adem√°s, se cuenta cu√°ntas veces se ha hecho la notificaci√≥n y se muestra en el monitor serial.
[33mb471ca7[m Creaci√≥n de proyecto: FreeRTOS LED and Button Int. Se enciende el LED si se est√° presionando el button, verificado por interrupci√≥n
[33me8353cb[m Creaci√≥n de proyecto: FreeRTOS LED and Button. Se enciende el LED si se est√° presionando el button, verificado por el m√©todo de poleo
[33m36b6e65[m Obtenci√≥n del archivo para analizar en System View, esta ocasi√≥n sin preempci√≥n dictada por el SysTick, es decir, scheduling cooperativo
[33mdf95c41[m Obtenci√≥n del archivo para analizar en System View
[33m4d5c2f8[m Prevenir que al correr FreeRTOS se vaya a default handler y deje de ejecutarse
[33md40b8e8[m Configuraci√≥n de clock reseteada, setup de UART y su aplicaci√≥n en dos tareas de FreeRTOS
[33m4ba73f1[m Creaci√≥n de proyecto con inclusi√≥n de elementos de FreeRTOS y ConfigFreeRTOS.h
